- step:
    name: load_data_fit
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.load_data("fit.sql")'

- step:
    name: consolidate_opps
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.consolidate_opps()'
    inputs:
      - name: loaded_data
        default: datum://017c6909-3bed-8508-0960-0c1b94513422

- step:
    name: process_df
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.process_df()'
    inputs:
      - name: loaded_data
        default: datum://017c69ed-31ca-9475-1fb1-c5df4e1ccd7c

- step:
    name: fit_rf
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.fit("rf")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: fit_etc
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.fit("etc")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: fit_cbc
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.fit("cbc")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: choose
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.choose()'
    inputs:
      - name: rf
        default: datum://017c69cc-33bc-d215-90a7-0706e022fe10
      - name: etc
        default: datum://017c69b5-9db9-6522-c559-cbb83ac85829
      - name: cbc
        default: datum://017c69b4-1b15-5577-e3c4-e1731c52f8d8
      - name: rf_pr_auc
        default: datum://017c69cc-3485-05b7-47cb-a40a44378343
      - name: etc_pr_auc
        default: datum://017c69b5-9e86-10cb-7123-b562e7598c00
      - name: cbc_pr_auc
        default: datum://017c69b4-1bfd-b98a-9298-2e59da6c8129

- step:
    name: load_data_predict
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.load_data("predict.sql")'

- step:
    name: ready_data_for_bars
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.ready_data_for_bars()'
    inputs:
      - name: data_for_bars
        default: datum://017c6909-3bed-8508-0960-0c1b94513422

- step:
    name: make_bars
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.make_bars()'
    inputs:
      - name: data_ready_for_bars
        default: datum://017c6909-3bed-8508-0960-0c1b94513422

- step:
    name: predict
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.predict()'
    inputs:
      - name: low_bar_for_predict
        default: datum://017aba21-6c05-82f7-1096-95743c267abc
      - name: high_bar_for_predict
        default: datum://017aba21-697e-f1ce-36df-53bbd558066e
      - name: loaded_data
        default: datum://017a8050-2eb8-27d1-dee1-9ba7bda9f069
      - name: top_model
        default: datum://017a8050-2eb8-27d1-dee1-9ba7bda9f069


- step:
    name: upload_to_s3
    image: yotamljfrog/csat_model:0.3
    command:
      - pip install -r requirements.txt
      - python -c 'import main; main.upload_to_s3()'
    inputs:
      - name: data_with_predictions
        default: datum://<DATUM_URL_FROM_STEP_EXECUTION>


- pipeline:
    name: fit_and_predict
    nodes:
      - name: load_data_fit
        type: execution
        step: load_data_fit
      - name: load_data_predict
        type: execution
        step: load_data_predict
      - name: consolidate_opps
        type: execution
        step: consolidate_opps
        override:
          inputs:
            - name: loaded_data
      - name: process_df_fit
        type: execution
        step: process_df
        override:
          inputs:
            - name: loaded_data
      - name: process_df_predict
        type: execution
        step: process_df
        override:
          inputs:
            - name: loaded_data
      - name: fit_rf
        type: execution
        step: fit_rf
        override:
          inputs:
            - name: processed_data
      - name: fit_etc
        type: execution
        step: fit_etc
        override:
          inputs:
            - name: processed_data
      - name: fit_cbc
        type: execution
        step: fit_cbc
        override:
          inputs:
            - name: processed_data
      - name: choose
        type: execution
        step: choose
        override:
          inputs:
            - name: rf
            - name: rf_pr_auc
            - name: etc
            - name: etc_pr_auc
            - name: cbc
            - name: cbc_pr_auc
      - name: ready_data_for_bars
        type: execution
        step: ready_data_for_bars
        override:
          inputs:
            - name: data_for_bars
      - name: make_bars
        type: execution
        step: make_bars
        override:
          inputs:
            - name: data_ready_for_bars
      - name: predict
        type: execution
        step: predict
        override:
          inputs:
            - name: loaded_data
            - name: low_bar_for_predict
            - name: high_bar_for_predict
            - name: top_model
    edges:
      - [load_data_fit.output.*.csv, consolidate_opps.inputs.loaded_data]
      - [consolidate_opps.output.*.csv, process_df_fit.inputs.loaded_data]
      - [process_df_fit.output.*.csv, fit_rf.inputs.processed_data]
      - [process_df_fit.output.*.csv, fit_etc.inputs.processed_data]
      - [process_df_fit.output.*.csv, fit_cbc.inputs.processed_data]
      - [process_df_fit.output.*.csv, ready_data_for_bars.inputs.data_for_bars]
      - [ready_data_for_bars.output.*.csv, make_bars.inputs.data_ready_for_bars]
      - [fit_rf.output.*.sav, choose.inputs.rf]
      - [fit_etc.output.*.sav, choose.inputs.etc]
      - [fit_cbc.output.*.sav, choose.inputs.cbc]
      - [fit_rf.output.*.json, choose.inputs.rf_pr_auc]
      - [fit_etc.output.*.json, choose.inputs.etc_pr_auc]
      - [fit_cbc.output.*.json, choose.inputs.cbc_pr_auc]
      - [choose.output.*.sav, predict.inputs.top_model]
      - [make_bars.output.low_bar_for_predict.csv, predict.inputs.low_bar_for_predict]
      - [make_bars.output.high_bar_for_predict.csv, predict.inputs.high_bar_for_predict]
      - [load_data_predict.output.*.csv, process_df_predict.inputs.loaded_data]
      - [process_df_predict.output.*.csv, predict.inputs.loaded_data]
