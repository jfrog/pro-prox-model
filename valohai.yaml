- step:
    name: load_data_train
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.load_data("fit.sql")'

- step:
    name: load_data_test
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.load_data("predict.sql")'

- step:
    name: process_train
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.process_train()'
    inputs:
      - name: loaded_data
        default: datum://017dd268-d1e1-c83b-869d-2c22ec1d0ac2

- step:
    name: fit_rf
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("rf")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: fit_etc
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("etc")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: fit_cbc
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("cbc")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: fit_hist
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("hist")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: choose_best_model
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.choose_best_model()'
    inputs:
      - name: rf
        default: datum://017dd2a2-d4e7-bfeb-0d1d-949e93fbdf3f
      - name: etc
        default: datum://017dd276-7b13-0740-fd8e-3c299e5b75f8
      - name: cbc
        default: datum://017dd27f-06a3-8235-11a6-89b36c0fc779
      - name: hist
        default: datum://017dd279-7223-3161-81ee-3263b52567a0
      - name: rf_pr_auc
        default: datum://017dd2a2-d609-455e-2b99-39069c54a605
      - name: etc_pr_auc
        default: datum://017dd276-7c13-5b33-081a-40f9fef4cf4a
      - name: cbc_pr_auc
        default: datum://017dd27f-07a9-06ce-e573-336a9805c03e
      - name: hist_pr_auc
        default: datum://017dd279-7340-51ae-3b15-cba99e39c37c

- step:
    name: predict_explain
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.predict_explain()'
    inputs:
      - name: loaded_data
        default: datum://017dd268-1f23-ae96-9e5c-5135e77084b5
      - name: top_model
        default: datum://017dd2a8-b9fe-41ea-3b19-622a191283c7

- step:
    name: upload_to_s3
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.upload_to_s3()'
    inputs:
      - name: final_prediction
        default: datum://017c7ede-e2bc-6153-99c6-e5184c4172f1

- pipeline:
    name: pro_to_prox_first_pipeline
    nodes:
      - name: load_data_train
        type: execution
        step: load_data_train
      - name: load_data_test
        type: execution
        step: load_data_test
      - name: process_train
        type: execution
        step: process_train
        override:
          inputs:
            - name: loaded_data
      - name: fit_rf
        type: execution
        step: fit_rf
        override:
          inputs:
            - name: processed_data
      - name: fit_etc
        type: execution
        step: fit_etc
        override:
          inputs:
            - name: processed_data
      - name: fit_cbc
        type: execution
        step: fit_cbc
        override:
          inputs:
            - name: processed_data
      - name: fit_hist
        type: execution
        step: fit_hist
        override:
          inputs:
            - name: processed_data
      - name: choose_best_model
        type: execution
        step: choose_best_model
        override:
          inputs:
            - name: rf
            - name: rf_pr_auc
            - name: etc
            - name: etc_pr_auc
            - name: cbc
            - name: cbc_pr_auc
            - name: hist
            - name: hist_pr_auc
      - name: predict_explain
        type: execution
        step: predict_explain
        override:
          inputs:
            - name: processed_data
            - name: top_model
      - name: upload_to_s3
        type: execution
        step: upload_to_s3
        override:
          inputs:
            - name: final_prediction
    edges:
      - [load_data_train.output.*.csv, process_train.inputs.loaded_data]
      - [process_train.output.*.csv, fit_rf.inputs.processed_data]
      - [process_train.output.*.csv, fit_etc.inputs.processed_data]
      - [process_train.output.*.csv, fit_cbc.inputs.processed_data]
      - [process_train.output.*.csv, fit_hist.inputs.processed_data]
      - [fit_rf.output.*.sav, choose_best_model.inputs.rf]
      - [fit_etc.output.*.sav, choose_best_model.inputs.etc]
      - [fit_cbc.output.*.sav, choose_best_model.inputs.cbc]
      - [fit_hist.output.*.sav, choose_best_model.inputs.hist]
      - [fit_rf.output.*.json, choose_best_model.inputs.rf_pr_auc]
      - [fit_etc.output.*.json, choose_best_model.inputs.etc_pr_auc]
      - [fit_cbc.output.*.json, choose_best_model.inputs.cbc_pr_auc]
      - [fit_hist.output.*.json, choose_best_model.inputs.hist_pr_auc]
      - [choose_best_model.output.*.sav, predict_explain.inputs.top_model]
      - [load_data_test.output.*.csv, predict_explain.inputs.loaded_data]
      - [predict_explain.output.*.csv, upload_to_s3.inputs.final_prediction]