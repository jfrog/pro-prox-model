- step:
    name: load_data_train
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.load_data("fit.sql")'

- step:
    name: load_data_test
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.load_data("predict.sql")'

- step:
    name: process_train
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.process_train()'
    inputs:
      - name: loaded_data
        default: datum://017dd268-d1e1-c83b-869d-2c22ec1d0ac2

- step:
    name: fit_rf
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("rf")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: fit_etc
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("etc")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: fit_cbc
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("cbc")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: fit_hist
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("hist")'
    inputs:
      - name: processed_data
        default: datum://017c692b-97f1-e890-9eef-7aeaf5e9e393

- step:
    name: choose_best_model
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.choose_best_model()'
    inputs:
      - name: rf
        default: datum://017c69cc-33bc-d215-90a7-0706e022fe10
      - name: etc
        default: datum://017c69b5-9db9-6522-c559-cbb83ac85829
      - name: cbc
        default: datum://017c69b4-1b15-5577-e3c4-e1731c52f8d8
      - name: hist
        default: datum://017c69b4-1b15-5577-e3c4-e1731c52f8d8
      - name: rf_pr_auc
        default: datum://017c69cc-3485-05b7-47cb-a40a44378343
      - name: etc_pr_auc
        default: datum://017c69b5-9e86-10cb-7123-b562e7598c00
      - name: cbc_pr_auc
        default: datum://017c69b4-1bfd-b98a-9298-2e59da6c8129
      - name: hist_pr_auc
        default: datum://017c69b4-1bfd-b98a-9298-2e59da6c8129

- step:
    name: predict_explain
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.predict_explain()'
    inputs:
      - name: processed_data
        default: datum://017dd268-1f23-ae96-9e5c-5135e77084b5
      - name: top_model
        default: datum://017a8050-2eb8-27d1-dee1-9ba7bda9f069

- step:
    name: upload_to_s3
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.upload_to_s3()'
    inputs:
      - name: final_prediction
        default: datum://017c7ede-e2bc-6153-99c6-e5184c4172f1

- pipeline:
    name: pro_to_prox_first_pipeline
    nodes:
      - name: load_data_train
        type: execution
        step: load_data_train
      - name: load_data_test
        type: execution
        step: load_data_test
      - name: process_train
        type: execution
        step: process_train
        override:
          inputs:
            - name: loaded_data
      - name: fit_rf
        type: execution
        step: fit_rf
        override:
          inputs:
            - name: processed_data
      - name: fit_etc
        type: execution
        step: fit_etc
        override:
          inputs:
            - name: processed_data
      - name: fit_cbc
        type: execution
        step: fit_cbc
        override:
          inputs:
            - name: processed_data
      - name: fit_hist
        type: execution
        step: fit_hist
        override:
          inputs:
            - name: processed_data
      - name: choose_best_model
        type: execution
        step: choose_best_model
        override:
          inputs:
            - name: rf
            - name: rf_pr_auc
            - name: etc
            - name: etc_pr_auc
            - name: cbc
            - name: cbc_pr_auc
            - name: hist
            - name: hist_pr_auc
      - name: predict_explain
        type: execution
        step: predict_explain
        override:
          inputs:
            - name: processed_data
            - name: top_model
      - name: upload_to_s3
        type: execution
        step: upload_to_s3
        override:
          inputs:
            - name: final_prediction
    edges:
      - [load_data_train.output.*.csv, process_train.inputs.loaded_data]
      - [process_train.output.*.csv, fit_rf.inputs.processed_data]
      - [process_train.output.*.csv, fit_etc.inputs.processed_data]
      - [process_train.output.*.csv, fit_cbc.inputs.processed_data]
      - [process_train.output.*.csv, fit_hist.inputs.processed_data]
      - [fit_rf.output.*.sav, choose_best_model.inputs.rf]
      - [fit_etc.output.*.sav, choose_best_model.inputs.etc]
      - [fit_cbc.output.*.sav, choose_best_model.inputs.cbc]
      - [fit_hist.output.*.sav, choose_best_model.inputs.hist]
      - [fit_rf.output.*.json, choose_best_model.inputs.rf_pr_auc]
      - [fit_etc.output.*.json, choose_best_model.inputs.etc_pr_auc]
      - [fit_cbc.output.*.json, choose_best_model.inputs.cbc_pr_auc]
      - [fit_hist.output.*.json, choose_best_model.inputs.hist_pr_auc]
      - [choose_best_model.output.*.sav, predict_explain.inputs.top_model]
      - [load_data_test.output.*.csv, predict_explain.inputs.loaded_data]
      - [predict_explain.output.*.csv, upload_to_s3.inputs.final_prediction]