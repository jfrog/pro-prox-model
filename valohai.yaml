- step:
    name: load_data_train
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.load_data("fit.sql")'

- step:
    name: load_data_test
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.load_data("predict.sql")'

- step:
    name: process_train
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.process_train()'
    inputs:
      - name: loaded_data
        default: datum://017dd268-d1e1-c83b-869d-2c22ec1d0ac2

- step:
    name: fit_rf
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("rf")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: fit_lgb
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("lgb")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: fit_cbc
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("cbc")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: fit_hist
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.fit_evaluate("hist")'
    inputs:
      - name: processed_data
        default: datum://017dd272-6fc1-4f37-a844-339711cfccdb

- step:
    name: choose_best_model
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.choose_best_model()'
    inputs:
      - name: rf
        default: datum://017dd2ed-8c7a-652c-d21d-6f02befe309f
      - name: lgb
        default: datum://017e6c48-8215-12c7-ec3f-fbf1d119e0c7
      - name: cbc
        default: datum://017dd2ff-f88d-914e-fea8-b9b24d48a9bd
      - name: hist
        default: datum://017dd2ea-67e6-18b2-faf0-b6df35bae8b1
      - name: rf_pr_auc
        default: datum://017dd2ed-8db9-3da7-fd13-5088557a0f61
      - name: lgb_pr_auc
        default: datum://017e6c48-8315-2320-756a-e80ac0aa4d83
      - name: cbc_pr_auc
        default: datum://017dd2ff-f98b-c644-3b78-93e5ee58ef7d
      - name: hist_pr_auc
        default: datum://017dd2ea-68c7-dcb9-1777-da4b9d90fb7a
      - name: rf_columns
        default: datum://017ee3fb-0d7b-17af-bebc-70a059858b55
      - name: lgb_columns
        default: datum://017ee3ff-f9d5-0e65-2e62-ea4cd557d840
      - name: cbc_columns
        default: datum://017ee409-f6fd-9bb0-41ce-ebbd0b3b5b71
      - name: hist_columns
        default: datum://017ee431-0365-aabf-faf2-69ffb41e8e09

- step:
    name: predict_explain
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.predict_explain()'
    inputs:
      - name: loaded_data
        default: datum://017dd268-1f23-ae96-9e5c-5135e77084b5
      - name: top_model
        default: datum://017dd31b-b6a3-b444-4495-6181d05903ac
      - name: top_model_cols
        default: datum://017dd31b-b6a3-b444-4495-6181d05903ac

- step:
    name: upload_to_s3
    image: yotamljfrog/proprox:0.1
    command:
      - pip install -r requirements.txt
      - python -c 'import prod_valohai; prod_valohai.upload_to_s3()'
    inputs:
      - name: final_prediction
        default: datum://017dd6be-f0ad-3f17-fd00-c5277d2dfab9

- pipeline:
    name: pro_to_prox_first_pipeline
    nodes:
      - name: load_data_train
        type: execution
        step: load_data_train
      - name: load_data_test
        type: execution
        step: load_data_test
      - name: process_train
        type: execution
        step: process_train
        override:
          inputs:
            - name: loaded_data
      - name: fit_rf
        type: execution
        step: fit_rf
        override:
          inputs:
            - name: processed_data
      - name: fit_lgb
        type: execution
        step: fit_lgb
        override:
          inputs:
            - name: processed_data
      - name: fit_cbc
        type: execution
        step: fit_cbc
        override:
          inputs:
            - name: processed_data
      - name: fit_hist
        type: execution
        step: fit_hist
        override:
          inputs:
            - name: processed_data
      - name: choose_best_model
        type: execution
        step: choose_best_model
        override:
          inputs:
            - name: rf
            - name: rf_pr_auc
            - name: rf_columns
            - name: lgb
            - name: lgb_pr_auc
            - name: lgb_columns
            - name: cbc
            - name: cbc_pr_auc
            - name: cbc_columns
            - name: hist
            - name: hist_pr_auc
            - name: hist_columns
      - name: predict_explain
        type: execution
        step: predict_explain
        override:
          inputs:
            - name: loaded_data
            - name: top_model
            - name: top_model_cols
      - name: upload_to_s3
        type: execution
        step: upload_to_s3
        override:
          inputs:
            - name: final_prediction
    edges:
      - [load_data_train.output.*.csv, process_train.inputs.loaded_data]
      - [process_train.output.*.csv, fit_rf.inputs.processed_data]
      - [process_train.output.*.csv, fit_lgb.inputs.processed_data]
      - [process_train.output.*.csv, fit_cbc.inputs.processed_data]
      - [process_train.output.*.csv, fit_hist.inputs.processed_data]
      - [fit_rf.output.*.sav, choose_best_model.inputs.rf]
      - [fit_lgb.output.*.sav, choose_best_model.inputs.lgb]
      - [fit_cbc.output.*.sav, choose_best_model.inputs.cbc]
      - [fit_hist.output.*.sav, choose_best_model.inputs.hist]
      - [fit_rf.output.*.json, choose_best_model.inputs.rf_pr_auc]
      - [fit_lgb.output.*.json, choose_best_model.inputs.lgb_pr_auc]
      - [fit_cbc.output.*.json, choose_best_model.inputs.cbc_pr_auc]
      - [fit_hist.output.*.json, choose_best_model.inputs.hist_pr_auc]
      - [fit_rf.output.*.json, choose_best_model.inputs.rf_columns]
      - [fit_lgb.output.*.json, choose_best_model.inputs.lgb_columns]
      - [fit_cbc.output.*.json, choose_best_model.inputs.cbc_columns]
      - [fit_hist.output.*.json, choose_best_model.inputs.hist_columns]
      - [choose_best_model.output.*.sav, predict_explain.inputs.top_model]
      - [choose_best_model.output.*.sav, predict_explain.inputs.top_model_cols]
      - [load_data_test.output.*.csv, predict_explain.inputs.loaded_data]
      - [predict_explain.output.*.csv, upload_to_s3.inputs.final_prediction]